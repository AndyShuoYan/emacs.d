#+TITLE: 我的Emacs配置
#+AUTHOR: 屈光辉
#+EMAIL: guanghui.qu@cocos2d-x.org
#+OPTIONS: toc:3 num:nil
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-light.min.css" />
#+STARTUP: showall


* 我的Emacs配置

**  Better Defaults
*** 关掉工具栏
#+begin_src emacs-lisp
  (tool-bar-mode -1);; turn off tool bar
#+end_src
*** 关掉启动画面和scratch buffer里面的内容
这里面setq 就是为一个变量定义一个值。 t表示true.
#+begin_src emacs-lisp
 (setq inhibit-splash-screen t)
(setq initial-scratch-message nil)
#+end_src
*** 改变光标的样式
#+begin_src emacs-lisp
   (setq-default cursor-type 'bar)
#+end_src
*** 启动Emacs的时候全屏显示
#+begin_src emacs-lisp
     (setq  initial-frame-alist (quote ((fullscreen . maximized))))
#+end_src
*** 粘贴删除选中区域
#+begin_src emacs-lisp
  (delete-selection-mode t)
#+end_src
*** 禁止生成备份文件
#+begin_src emacs-lisp
  (setq backup-files nil)
  (setq auto-save-files nil)
#+end_src
*** 当外部文件修改时，自动加载文件文件
#+begin_src emacs-lisp
  (global-auto-revert-mode t)
#+end_src
*** 修改打开的最大文件警告阈值
#+begin_src emacs-lisp
(setq large-file-warning-threshold 100000000)
#+end_src


** 安装插件
***  配置包管理器
这里面推荐使用melpa和mamalade,我这里只配置melpa
#+begin_src emacs-lisp
  (when (>= emacs-major-version 24)
    (require 'package)
    (package-initialize)
    (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)
    )
  (require 'cl)
#+end_src


*** 定义默认要安装的package
#+begin_src emacs-lisp
  (defvar guanghui/packages '(
                            company
                            monokai-theme
                            cmake-mode
                            cmake-font-lock
                            exec-path-from-shell
                            smex
                            yasnippet                      
                )  "Default packages")
#+end_src

*** 安装默认的package
#+begin_src emacs-lisp
  (defun guanghui/packages-installed-p ()
    (loop for pkg in guanghui/packages
          when (not (package-installed-p pkg)) do (return nil)
          finally (return t)))

  (unless (guanghui/packages-installed-p)
    (message "%s" "Refreshing package database...")
    (package-refresh-contents)
    (dolist (pkg guanghui/packages)
      (when (not (package-installed-p pkg))
        (package-install pkg))))
#+end_src


*** 让mac系统下面的命令行程序可见
http://stackoverflow.com/questions/8606954/path-and-exec-path-set-but-emacs-does-not-find-executable
安装exec-path-from-shell插件，否则很多需要调用命令行的插件都不起作用。

注意：这个插件的配置最好放在其它插件配置的前面。

#+begin_src emacs-lisp
(when (memq window-system '(mac ns))
  (exec-path-from-shell-initialize))
#+end_src


** 配置预选定义的插件
*** 激活cmake mode
#+begin_src emacs-lisp

(setq auto-mode-alist
	  (append
	   '(("CMakeLists\\.txt\\'" . cmake-mode))
	   '(("\\.cmake\\'" . cmake-mode))
	   auto-mode-alist))
#+end_src
   


***  配置company插件
输入M-x package-list-packages, 按C-s并输入company搜索到company，记住选melpa，这个比较新。
**** 在任何buffer里面都激活company mode
#+begin_src emacs-lisp
  (global-company-mode 1)
#+end_src
**** 添加一些默认的company配置
#+begin_src emacs-lisp
   (eval-after-load 'company
  '(progn
     (setq company-echo-delay 0)
     (setq company-idle-delay 0.08)
     (setq company-auto-complete nil)
     (setq company-show-numbers t)
     (setq company-begin-commands '(self-insert-command))
     (setq company-tooltip-limit 10)
     (setq company-minimum-prefix-length 1)
      (let ((map company-active-map))
          (define-key map (kbd "C-d") 'company-show-doc-buffer)
          (define-key map (kbd "C-n") 'company-select-next)
          (define-key map (kbd "C-p") 'company-select-previous)
          (define-key map (kbd "C-l") 'company-complete-selection))
      ))
#+end_src



** 辅助工具
 让Emacs的命令和提示更好用
***  激活ido mode
让c-x c-f提示更友好。
#+begin_src emacs-lisp
  (ido-mode t)
#+end_src

*** 激活smex，让M-x更好用
#+begin_src emacs-lisp
(setq smex-save-file (expand-file-name ".smex-items" user-emacs-directory))
(smex-initialize)
(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
#+end_src


** server模式
#+begin_src emacs-lisp
  ;;----------------------------------------------------------------------------
  ;; Allow access from emacsclient
  ;;----------------------------------------------------------------------------
  (require 'server)
  (unless (server-running-p)
    (server-start))
#+end_src

**  主题
   安装monokai，让emacs启动的时候就加载monokai主题。
#+begin_src emacs-lisp
  (load-theme 'monokai t)
#+end_src
